---------------------------------------------------------------------------------------------------------------------------------------
###Change column names:

# Now you want to change "bad" and "worst" to "good" and "best". You can use

colnames(train)[which(colnames(train) %in% c("bad","worst") )] <- c("good","best")

---------------------------------------------------------------------------------------------------------------------------------------
# Divide or Multiply a column by another column, if zero present make it NA or 0 not infinite

train1$'SLA %'<-ifelse(train1$'SLA %'==0, 0, train1$'SLA %'/100)

# or

df$new_column <- df$column1 * df$column2

data.frame(lapply(df[train1$'SLA %',train1$'%Reopen Incidents', train1$'%Attrition', train1$'% of feedback'], function(X) X/100))
----------------------------------------------------------------------------------------------------------------------------------------
#Join two columns and seperate it with '_' and create a new column. Also remove the column

within(HC1, C <- paste(Text, Unit, sep='_'))

HC2<- within(HC1, Category <- paste(Text, Unit, sep='_'))

HC3 <- subset(HC2, select = -c(Text,Unit))
-----------------------------------------------------------------------------------------------------------------------------------------
# Make the first row as the column names

install.packages("data.table")
library(data.table)

## setDT helps to convert lists and data frames to Data Tables with reference

tHC6<- setDT(tHC6, keep.rownames = TRUE)[]

tHC6 <- sapply(tHC6, as.character)

#converts first row to column header
colnames(tHC6) <- tHC6[1, ]

#remove the first row
tHC6 <- as.data.frame(tHC6[-1,])

--------------------------------------------------------------------------------------------------------------------------------------------

# Reduce the decimals to 2 

signif(tHC6, digits = 2)

is.num <- sapply(tHC6, is.numeric)
tHC6[is.num] <- lapply(tHC6[is.num], round, 2)

-----------------------------------------------------------------------------------------------------------------------------------------
# replace a character in a dataset using gsub
healthdata$Total.Charges<-as.numeric(gsub("\\$","",healthdata$Total.Charges))

healthdata$Total.Charges<-as.numeric(gsub("\\+","",healthdata$Total.Charges))

-----------------------------------------------------------------------------------------------------------------------------------------
# Remove all special Characters from the dataset

Ktrain1 <- as.data.frame(lapply(Ktrain, function(y) gsub("[[:punct:]]"," ",y)))

------------------------------------------------------------------------------------------------------------------------------------------
#Imputation Impute Categorical, Numerical, Binary - In Mice Package just change the Method (CHeck for help what goes in each of it)

#ref link: https://github.com/jeevankumarkr/G1-Repo1/edit/master/R%20Basic
#Impute Data
library(mice)

tempData <- mice(data,m=5,maxit=50,meth='pmm',seed=500)
summary(tempData)

#Inspecting the distribution of original and imputed data

#First of all we can use a scatterplot and plot Ozone against all the other variables

xyplot(tempData,Ozone ~ Wind+Temp+Solar.R,pch=18,cex=1)

densityplot(tempData)

#stripplot() function that shows the distributions of the variables as individual points

stripplot(tempData, pch = 20, cex = 1.2)

#The mice package makes it again very easy to fit a a model to each of the imputed dataset and then pool the results together

modelFit1 <- with(tempData,lm(Temp~ Ozone+Solar.R+Wind))
summary(pool(modelFit1))
------------------------------------------------------------------------------------------------------------------------------------------


